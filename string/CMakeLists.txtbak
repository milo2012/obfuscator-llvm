find_program(XXD xxd)

if (NOT TARGET_C_COMPILER)
    set(CLANG "${TARGET_C_COMPILER}")
else()
    set(CLANG "${LLVM_TOOLS_BINARY_DIR}/clang")
endif()

add_custom_command(
    OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/decode.h
    COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/generate_ir_header.sh
                ${CLANG} ${XXD}
                ${CMAKE_CURRENT_SOURCE_DIR}/decode.c
                ${CMAKE_CURRENT_BINARY_DIR} decode.h
    DEPENDS decode.c
)

add_custom_target(generateDecodeIRHeader ALL
    DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/decode.h
)

# Define your executable or library
target_sources(LLVMObfuscator PRIVATE main.cpp StringObfuscation.cpp)

# Make sure LLVM is found - assuming llvm-config is available
find_package(LLVM REQUIRED CONFIG)

# This macro gets the right LLVM libraries for you
llvm_map_components_to_libnames(llvm_libs core irreader support)

target_link_libraries(LLVMObfuscator PRIVATE ${llvm_libs})

add_dependencies(LLVMObfuscator generateDecodeIRHeader)

